
            <!-- Fan 1 -->
            <img id="fan1" src="{{ url_for('static', filename='images/fan000.gif') }}"
                style="position:absolute; left:511px; top:208px; width:42px; height:42px; border-radius: 60px; border: 2.5px solid black; padding:8px;">

            <div
                style="position: absolute; left: 576px; top: 208px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="fan1-toggle" onclick="toggleFan('fan1')"
                    style="width: 13px; height: 13px; background-color: green; border: none; border-radius: 50%; box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.2);">
                </button>
            </div>

            <div
                style="position: absolute; left: 596px; top: 208px; width: 17px; height: 17px; display: flex; align-items: center; justify-content: center;">
                <button id="fan1-trip" onclick="toggleTrip('fan1')"
                    style="width: 13px; height: 13px; background-color: white; border: none; border-radius: 50%; outline: none;">
                </button>
            </div>

            <!-- Fan 2 -->
            <img id="fan2" src="{{ url_for('static', filename='images/fan000.gif') }}"
                style="position:absolute; left:511px; top:320px; width:42px; height:42px; border-radius: 60px; border: 2.5px solid black; padding:8px;">

            <div
                style="position: absolute; left: 576px; top: 320px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="fan2-toggle" onclick="toggleFan('fan2')"
                    style="width: 13px; height: 13px; background-color: green; border: none; border-radius: 50%; box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.2);">
                </button>
            </div>

            <div
                style="position: absolute; left: 596px; top: 320px; width: 17px; height: 17px; display: flex; align-items: center; justify-content: center;">
                <button id="fan2-trip" onclick="toggleTrip('fan2')"
                    style="width: 13px; height: 13px; background-color: white; border: none; border-radius: 50%; outline: none;">
                </button>
            </div>

            <!-- Fan 3 -->
            <img id="fan3" src="{{ url_for('static', filename='images/fan000.gif') }}"
                style="position:absolute; left:1273px; top:391px; width:42px; height:42px; border-radius: 60px; border: 2.5px solid black; padding:8px;">

            <div
                style="position: absolute; left: 1338px; top: 391px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="fan3-toggle" onclick="toggleFan('fan3')"
                    style="width: 13px; height: 13px; background-color: green; border: none; border-radius: 50%; box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.2);">
                </button>
            </div>

            <div
                style="position: absolute; left: 1358px; top: 391px; width: 17px; height: 17px; display: flex; align-items: center; justify-content: center;">
                <button id="fan3-trip" onclick="toggleTrip('fan3')"
                    style="width: 13px; height: 13px; background-color: white; border: none; border-radius: 50%; outline: none;">
                </button>
            </div>


            <div
                style="position: absolute; left: 318px; top: 348px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button1_1"
                    style="width: 13px; height: 13px; background-color: red; border-radius: 50%; border: none;"
                    onclick="changeColor('button1_1')"></button>
            </div>

            <div
                style="position: absolute; left: 338px; top: 348px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button2_1"
                    style="width: 13px; height: 13px; background-color: yellow; border-radius: 50%; border: none;"
                    onclick="changeColor('button2_1')"></button>
            </div>

            <div
                style="position: absolute; left: 575px; top: 540px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button1_2"
                    style="width: 13px; height: 13px; background-color: red; border-radius: 50%; border: none;"
                    onclick="changeColor('button1_2')"></button>
            </div>

            <div
                style="position: absolute; left: 595px; top: 540px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button2_2"
                    style="width: 13px; height: 13px; background-color: yellow; border-radius: 50%; border: none;"
                    onclick="changeColor('button2_2')"></button>
            </div>

            <div
                style="position: absolute; left: 1080px; top: 353px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button1_3"
                    style="width: 13px; height: 13px; background-color: red; border-radius: 50%; border: none;"
                    onclick="changeColor('button1_3')"></button>
            </div>

            <div
                style="position: absolute; left: 1100px; top: 353px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button2_3"
                    style="width: 13px; height: 13px; background-color: yellow; border-radius: 50%; border: none;"
                    onclick="changeColor('button2_3')"></button>
            </div>


            <div
                style="position: absolute; left: 418px; top: 500px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button1_4"
                    style="width: 13px; height: 13px; background-color: red; border-radius: 50%; border: none;"
                    onclick="changeColor('button1_4')"></button>
            </div>

            <div
                style="position: absolute; left: 438px; top: 500px; width: 17px; height: 17px; border: 1px solid black; display: flex; align-items: center; justify-content: center;">
                <button id="button2_4"
                    style="width: 13px; height: 13px; background-color: yellow; border-radius: 50%; border: none;"
                    onclick="changeColor('button2_4')"></button>
            </div>

            <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
        <script>
            // Initialize Socket.IO client
            const socket = io.connect('http://' + document.domain + ':' + location.port);

            // Function to format numbers
            function formatValue(value) {
                let floatValue = parseFloat(value);
                return floatValue % 1 === 0 ? floatValue.toString() : floatValue.toFixed(2);
            }

            // Listen for updates from the server
            socket.on('update', function (data) {
                document.getElementById('counter').textContent = formatValue(data.Counter);
                document.getElementById('random').textContent = formatValue(data.Random);
                document.getElementById('sawtooth').textContent = formatValue(data.Sawtooth);
                document.getElementById('sinusoid').textContent = formatValue(data.Sinusoid);
                document.getElementById('square').textContent = formatValue(data.Square);
                document.getElementById('triangle').textContent = formatValue(data.Triangle);
                document.getElementById('random2').textContent = formatValue(data.Random);
            });

            function changeColor(buttonId) {
                const button = document.getElementById(buttonId);
                const [group, pair] = buttonId.split("_"); // Extract group (1 or 2) and pair number (e.g., 1, 2, 3, 4)
                const otherButtonId = (group === "button1" ? `button2_${pair}` : `button1_${pair}`);
                const otherButton = document.getElementById(otherButtonId);
                const container = button.parentElement; // Assuming container is the parent element of the buttons

                if (group === "button1") {
                    // Button 1_x Logic
                    if (otherButton.style.backgroundColor === "yellow") {
                        button.style.backgroundColor = "red"; // Stay red if paired button is yellow
                    } else {
                        button.style.backgroundColor = button.style.backgroundColor === "red" ? "green" : "red";
                    }
                } else if (group === "button2") {
                    // Button 2_x Logic
                    if (button.style.backgroundColor === "yellow") {
                        button.style.backgroundColor = "white";
                        container.style.border = "none"; // Remove the container's border
                        otherButton.style.backgroundColor = "red"; // Ensure the first button turns red when tripped
                    } else {
                        button.style.backgroundColor = "yellow";
                        container.style.border = "1px solid black"; // Add border
                        otherButton.style.backgroundColor = "red"; // Ensure the first button turns red when tripped
                    }
                }

                // Ensure the first button is always visible
                ensureVisibility(otherButton, group);
            }

            function ensureVisibility(button, group) {
                if (group === "button1") {
                    // First button should never be hidden
                    button.style.display = "inline-block";
                }
            }



            // <-- fan -->

            let fanStates = {
                "fan1": { running: true, tripped: false },
                "fan2": { running: true, tripped: false },
                "fan3": { running: true, tripped: false }
            };

            // Helper to update fan visuals
            function updateFanVisuals(fanId) {
                const fanImg = document.getElementById(fanId);
                const toggleButton = document.getElementById(`${fanId}-toggle`);
                const tripButton = document.getElementById(`${fanId}-trip`);

                if (fanStates[fanId].tripped) {
                    // Fan is tripped
                    fanImg.src = staticImagePath("fan_stopped.png");
                    toggleButton.style.backgroundColor = "red";
                    tripButton.style.backgroundColor = "yellow";
                    tripButton.parentElement.style.border = "1px solid black";
                } else {
                    // Fan is not tripped
                    tripButton.style.backgroundColor = "white";
                    tripButton.parentElement.style.border = "none";

                    if (fanStates[fanId].running) {
                        fanImg.src = staticImagePath("fan000.gif");
                        toggleButton.style.backgroundColor = "green";
                        tripButton.style.display = "inline-block";
                    } else {
                        fanImg.src = staticImagePath("fan_stopped.png");
                        toggleButton.style.backgroundColor = "red";
                        tripButton.style.display = "none";
                    }
                }
            }

            // Toggle the fan state (running/stopped)
            function toggleFan(fanId) {
                if (!fanStates[fanId].tripped) {
                    fanStates[fanId].running = !fanStates[fanId].running;
                    updateFanVisuals(fanId);
                }
            }

            // Toggle the trip state of the fan
            function toggleTrip(fanId) {
                fanStates[fanId].tripped = !fanStates[fanId].tripped;
                updateFanVisuals(fanId);
            }

            // Helper for generating static file paths
            function staticImagePath(filename) {
                return `/static/images/${filename}`;
            }



        </script>

        <script>
            // Get the active submodule variable from the server
            const activeSubmodule = "{{ active_submodule }}";  // Use Jinja to get the value

            // This function will trigger the submodule toggle
            function openActiveSubmodule() {
                const buttonElement = document.querySelector(`button[id$='${activeSubmodule.replace('Submodules', '')}']`);
                if (buttonElement) {
                    buttonElement.click();  // Simulate click on the module button to open it
                }
            }

            // Call the function when the page loads
            window.onload = function () {
                openActiveSubmodule();
            };
        </script>
